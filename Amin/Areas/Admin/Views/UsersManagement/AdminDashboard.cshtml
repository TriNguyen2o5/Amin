@model Amin.Data.User
@{
    ViewData["Title"] = "AdminDashboard";
}
<li
<div class="container mt-5">
    <h2 class="text-center mb-4">Biểu Đồ Thông Tin Người Dùng</h2>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white">
            <h3>Biểu đồ BMI của người dùng</h3>
        </div>
        <div class="card-body">
            <div id="chart"></div> <!-- Khu vực cho biểu đồ D3 -->
        </div>
    </div>
</div>

<script src="https://d3js.org/d3.v7.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy dữ liệu người dùng từ ViewBag
        const users = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Users));

        // Chuyển dữ liệu thành định dạng cho D3.js
        const data = users.map(user => ({
            name: user.FullName,
            bmi: user.Bmi || 0 // Gán giá trị BMI, nếu không có thì là 0
        }));

        // Thiết lập khu vực SVG cho biểu đồ
        const width = 600, height = 400, margin = { top: 20, right: 20, bottom: 50, left: 60 };
        const svg = d3.select("#chart").append("svg")
            .attr("width", width)
            .attr("height", height);

        // Thiết lập thang đo cho trục X và trục Y
        const x = d3.scaleBand()
            .domain(data.map(d => d.name))
            .range([margin.left, width - margin.right])
            .padding(0.1);

        const y = d3.scaleLinear()
            .domain([0, d3.max(data, d => d.bmi)]).nice()
            .range([height - margin.bottom, margin.top]);

        // Vẽ các thanh biểu đồ
        svg.selectAll(".bar")
            .data(data)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("x", d => x(d.name))
            .attr("y", d => y(d.bmi))
            .attr("width", x.bandwidth())
            .attr("height", d => y(0) - y(d.bmi))
            .attr("fill", "#69b3a2");

        // Thêm trục X
        svg.append("g")
            .attr("transform", `translate(0,${height - margin.bottom})`)
            .call(d3.axisBottom(x))
            .selectAll("text")
            .attr("transform", "rotate(-45)")
            .style("text-anchor", "end");

        // Thêm trục Y
        svg.append("g")
            .attr("transform", `translate(${margin.left},0)`)
            .call(d3.axisLeft(y));
    });
</script>



