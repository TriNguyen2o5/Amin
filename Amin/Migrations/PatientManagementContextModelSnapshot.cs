// <auto-generated />
using System;
using Amin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Amin.Migrations
{
    [DbContext(typeof(PatientManagementContext))]
    partial class PatientManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Amin.Data.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Comment_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("CommentAuthorId")
                        .HasColumnType("int")
                        .HasColumnName("Comment_Author_ID");

                    b.Property<string>("CommentContent")
                        .HasColumnType("ntext")
                        .HasColumnName("Comment_Content");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Comment_Date");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("Post_ID");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__99FC143B4CE8B184");

                    b.HasIndex("CommentAuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Amin.Data.Notification", b =>
                {
                    b.Property<int>("NotificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificateId"));

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateOnly?>("SendDay")
                        .HasColumnType("date")
                        .HasColumnName("Send_Day");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NotificateId")
                        .HasName("PK__Notifica__14707F342513C431");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Amin.Data.PatientInformation", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Record_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<decimal?>("CaffeineIntake")
                        .HasColumnType("decimal(4, 1)")
                        .HasColumnName("Caffeine_intake");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("PhysicalActivityDuration")
                        .HasColumnType("int")
                        .HasColumnName("Physical_Activity_Duration");

                    b.Property<TimeOnly?>("SleepTime")
                        .HasColumnType("time")
                        .HasColumnName("Sleep_Time");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.Property<TimeOnly?>("WakeTime")
                        .HasColumnType("time")
                        .HasColumnName("Wake_Time");

                    b.HasKey("RecordId")
                        .HasName("PK__Patient___603A0C60E46CD560");

                    b.HasIndex("UserId");

                    b.ToTable("Patient_Informations", (string)null);
                });

            modelBuilder.Entity("Amin.Data.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Post_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("AuthorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Author_Name");

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<string>("PostImageData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Post_Image_Data");

                    b.Property<string>("PostImageId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Post_Image_ID");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Posted_Date");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PostId")
                        .HasName("PK__Posts__5875F74D65BE3C04");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Amin.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("AlcoholicStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Alcoholic_status");

                    b.Property<decimal?>("Bmi")
                        .HasColumnType("decimal(4, 1)")
                        .HasColumnName("BMI");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Full_Name");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("SmokingStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Smoking_status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("YearOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Year_Of_Birth");

                    b.HasKey("UserId")
                        .HasName("PK__Users__206D91904F968F0E");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E49A7B7A13")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TruyCap", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("Post_ID");

                    b.HasKey("UserId", "PostId")
                        .HasName("PK__Truy_Cap__E5EACEE4E8E8D7B5");

                    b.HasIndex("PostId");

                    b.ToTable("Truy_Cap", (string)null);
                });

            modelBuilder.Entity("Amin.Data.Comment", b =>
                {
                    b.HasOne("Amin.Data.User", "CommentAuthor")
                        .WithMany("Comments")
                        .HasForeignKey("CommentAuthorId")
                        .HasConstraintName("FK_Comments_AuthorID");

                    b.HasOne("Amin.Data.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_PostID");

                    b.Navigation("CommentAuthor");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Amin.Data.PatientInformation", b =>
                {
                    b.HasOne("Amin.Data.User", "User")
                        .WithMany("PatientInformations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_PatientInfo_UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TruyCap", b =>
                {
                    b.HasOne("Amin.Data.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_TruyCap_PostID");

                    b.HasOne("Amin.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TruyCap_UserID");
                });

            modelBuilder.Entity("Amin.Data.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Amin.Data.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PatientInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
